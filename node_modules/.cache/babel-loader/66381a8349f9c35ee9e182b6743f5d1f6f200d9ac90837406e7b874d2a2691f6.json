{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  id: \"myUL\"\n};\nconst _hoisted_4 = {\n  class: \"nav-right\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"header\"\n  }, [_createElementVNode(\"h1\", null, \"Todo List\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo.title = $event),\n    placeholder: \"Add a new task\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTodo.title]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newTodo.description = $event),\n    placeholder: \"Description\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTodo.description]]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-sm\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addTodo && $options.addTodo(...args))\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"i\", {\n    class: \"fas fa-check\"\n  }, \"Add Todo\", -1 /* HOISTED */)]))]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, [_createElementVNode(\"span\", {\n      style: _normalizeStyle({\n        textDecoration: todo.completed ? 'line-through' : 'none'\n      })\n    }, _toDisplayString(todo.title), 5 /* TEXT, STYLE */), _createCommentVNode(\" {{ todo.description }} \"), _createElementVNode(\"div\", _hoisted_4, [!todo.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn btn-success btn-sm\",\n      onClick: $event => $options.markComplete(todo.id)\n    }, [...(_cache[4] || (_cache[4] = [_createElementVNode(\"i\", {\n      class: \"fas fa-check\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), todo.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"btn btn-success btn-sm completed\",\n      onClick: $event => $options.markIncomplete(todo.id)\n    }, [...(_cache[5] || (_cache[5] = [_createElementVNode(\"i\", {\n      class: \"fas fa-check\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $options.deleteTodo(todo.id)\n    }, [...(_cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n      class: \"fas fa-close\"\n    }, null, -1 /* HOISTED */)]))], 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_cache","$event","$data","newTodo","title","placeholder","description","onClick","args","$options","addTodo","_hoisted_2","_hoisted_3","_renderList","todos","todo","key","style","_normalizeStyle","textDecoration","completed","_createCommentVNode","_hoisted_4","markComplete","_hoisted_5","markIncomplete","_hoisted_6","deleteTodo","_hoisted_7"],"sources":["E:\\Todo List\\frontend-todo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div class=\"header\">\r\n        <h1>Todo List</h1>\r\n    </div>\r\n\r\n    <div class=\"search\">\r\n        <input v-model=\"newTodo.title\" placeholder=\"Add a new task\" />\r\n        <textarea v-model=\"newTodo.description\" placeholder=\"Description\"></textarea>\r\n        <button class=\"btn btn-primary btn-sm\" @click=\"addTodo\">\r\n            <i class=\"fas fa-check\">Add Todo</i>\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n        <ul id=\"myUL\">\r\n            <li v-for=\"todo in todos\" :key=\"todo.id\">\r\n                <span :style=\"{ textDecoration: todo.completed ? 'line-through' : 'none' }\">\r\n                    {{ todo.title }}\r\n                </span>\r\n                <!-- {{ todo.description }} -->\r\n\r\n                <div class=\"nav-right\">\r\n\r\n                    <button v-if=\"!todo.completed\" class=\"btn btn-success btn-sm\" @click=\"markComplete(todo.id)\">\r\n                        <i class=\"fas fa-check\"></i>\r\n                    </button>\r\n\r\n                    <button v-if=\"todo.completed\" class=\"btn btn-success btn-sm completed\" @click=\"markIncomplete(todo.id)\">\r\n                        <i class=\"fas fa-check\"></i>\r\n                    </button>\r\n\r\n                    <button class=\"btn btn-danger btn-sm\" @click=\"deleteTodo(todo.id)\">\r\n                        <i class=\"fas fa-close\"></i>\r\n                    </button>\r\n\r\n\r\n\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        </div>\r\n\r\n\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n        return {\r\n            todos: [],\r\n            newTodo: {\r\n            title: '',\r\n            description: ''\r\n            }\r\n        };\r\n    },\r\n        mounted() {\r\n        this.fetchTodos();\r\n    },\r\n    methods: {\r\n        async fetchTodos() {\r\n            try {\r\n            const response = await axios.get('http://localhost:3333/todos');\r\n            this.todos = response.data;\r\n            } catch (error) {\r\n            console.error('Error fetching todos:', error);\r\n            }\r\n        },\r\n        async addTodo() {\r\n            try {\r\n            const response = await axios.post('http://localhost:3333/todos', this.newTodo);\r\n            this.todos.push(response.data);\r\n            this.newTodo.title = '';\r\n            this.newTodo.description = '';\r\n            } catch (error) {\r\n            console.error('Error adding todo:', error);\r\n            }\r\n        },\r\n    //   async EditTodo() {\r\n    //     try {\r\n    //       const response = await axios.post('http://localhost:3333/todos', this.newTodo);\r\n    //       this.todos.push(response.data);\r\n    //       this.newTodo.title = '';\r\n    //       this.newTodo.description = '';\r\n    //     } catch (error) {\r\n    //       console.error('Error adding todo:', error);\r\n    //     }\r\n    //   },\r\n        async markComplete(id) {\r\n        try {\r\n            await axios.patch(`http://localhost:3333/todos/${id}/complete`);\r\n            const todo = this.todos.find(t => t.id === id);\r\n            todo.completed = true;\r\n        } catch (error) {\r\n            console.error('Error marking todo as complete:', error);\r\n        }\r\n        },\r\n        async markIncomplete(id) {\r\n        try {\r\n            await axios.patch(`http://localhost:3333/todos/${id}/incomplete`);\r\n            const todo = this.todos.find(t => t.id === id);\r\n            todo.completed = false;\r\n        } catch (error) {\r\n            console.error('Error marking todo as incomplete:', error);\r\n        }\r\n        },\r\n        async deleteTodo(id) {\r\n            try {\r\n            await axios.delete(`http://localhost:3333/todos/${id}`);\r\n            this.todos = this.todos.filter(todo => todo.id !== id);\r\n            } catch (error) {\r\n            console.error('Error deleting todo:', error);\r\n            }\r\n        }\r\n    }\r\n  };\r\n  </script>"],"mappings":";;EAKSA,KAAK,EAAC;AAAQ;;EAQdA,KAAK,EAAC;AAAW;;EACdC,EAAE,EAAC;AAAM;;EAOAD,KAAK,EAAC;AAAW;mBArBtC;mBAAA;mBAAA;;uBAAAE,mBAAA,CAAAC,SAAA,S,0BACIC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAQ,IACfI,mBAAA,CAAkB,YAAd,WAAS,E,sBAGjBA,mBAAA,CAMM,OANNC,UAMM,G,gBALFD,mBAAA,CAA8D;IANtE,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMwBC,KAAA,CAAAC,OAAO,CAACC,KAAK,GAAAH,MAAA;IAAEI,WAAW,EAAC;iDAA3BH,KAAA,CAAAC,OAAO,CAACC,KAAK,E,mBAC7BN,mBAAA,CAA6E;IAPrF,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO2BC,KAAA,CAAAC,OAAO,CAACG,WAAW,GAAAL,MAAA;IAAEI,WAAW,EAAC;iDAAjCH,KAAA,CAAAC,OAAO,CAACG,WAAW,E,GACtCR,mBAAA,CAES;IAFDJ,KAAK,EAAC,wBAAwB;IAAEa,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;gCAClDV,mBAAA,CAAoC;IAAjCJ,KAAK,EAAC;EAAc,GAAC,UAAQ,oB,MAIxCI,mBAAA,CA2BU,OA3BVa,UA2BU,GA1BNb,mBAAA,CAyBK,MAzBLc,UAyBK,I,kBAxBDhB,mBAAA,CAuBKC,SAAA,QAtCjBgB,WAAA,CAe+BX,KAAA,CAAAY,KAAK,EAAbC,IAAI;yBAAfnB,mBAAA,CAuBK;MAvBsBoB,GAAG,EAAED,IAAI,CAACpB;QACjCG,mBAAA,CAEO;MAFAmB,KAAK,EAhB5BC,eAAA;QAAAC,cAAA,EAgBgDJ,IAAI,CAACK,SAAS;MAAA;wBACvCL,IAAI,CAACX,KAAK,yBAEjBiB,mBAAA,4BAA+B,EAE/BvB,mBAAA,CAgBM,OAhBNwB,UAgBM,G,CAdaP,IAAI,CAACK,SAAS,I,cAA7BxB,mBAAA,CAES;MAzB7BoB,GAAA;MAuBmDtB,KAAK,EAAC,wBAAwB;MAAEa,OAAK,EAAAN,MAAA,IAAEQ,QAAA,CAAAc,YAAY,CAACR,IAAI,CAACpB,EAAE;uCACtFG,mBAAA,CAA4B;MAAzBJ,KAAK,EAAC;IAAc,2B,oBAxB/C8B,UAAA,KAAAH,mBAAA,gBA2BkCN,IAAI,CAACK,SAAS,I,cAA5BxB,mBAAA,CAES;MA7B7BoB,GAAA;MA2BkDtB,KAAK,EAAC,kCAAkC;MAAEa,OAAK,EAAAN,MAAA,IAAEQ,QAAA,CAAAgB,cAAc,CAACV,IAAI,CAACpB,EAAE;uCACjGG,mBAAA,CAA4B;MAAzBJ,KAAK,EAAC;IAAc,2B,oBA5B/CgC,UAAA,KAAAL,mBAAA,gBA+BoBvB,mBAAA,CAES;MAFDJ,KAAK,EAAC,uBAAuB;MAAEa,OAAK,EAAAN,MAAA,IAAEQ,QAAA,CAAAkB,UAAU,CAACZ,IAAI,CAACpB,EAAE;uCAC5DG,mBAAA,CAA4B;MAAzBJ,KAAK,EAAC;IAAc,2B,oBAhC/CkC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}